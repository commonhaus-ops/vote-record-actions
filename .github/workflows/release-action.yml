name: Release workflows and actions

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'New version or major, minor, patch'
        default: 'patch'
        required: true

env:
  GH_BOT_EMAIL: "41898282+github-actions[bot]@users.noreply.github.com"
  GH_BOT_NAME: "GitHub Action"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      actions: write
      contents: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # Fine-grained PAT with contents:write and workflows:write
          # scopes
          token: ${{ secrets.CF_VOTES_RELEASE_ACTION }} # otherwise, you will failed to push refs to dest repo

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      # Build the plugin
      - name: Build and Tag
        id: build
        env:
          INPUT_VERSION: ${{ github.event.inputs.version }}
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          git config user.name ${{ env.GH_BOT_NAME }}
          git config user.email ${{ env.GH_BOT_EMAIL }}

          npm ci
          npm run build

          VERSION=$(npm version ${INPUT_VERSION} -m "üîñ %s" --tag-version-prefix="")
          git push && git push --tags

          RELEASE=${VERSION#v}
          BRANCH=release/${RELEASE}

          # Create a new branch for the release
          git checkout -b ${BRANCH}

          # Update references from main to the new release branch
          PATTERN="/path: 'vote-record-actions'/{n;s|ref: main|ref: ${BRANCH}|}"
          echo PATTERN
          sed -i "$PATTERN" .github/actions/count-votes/action.yml
          sed -i "s|count-votes@main|count-votes@'$RELEASE'|" .github/workflows/receive-votes.yml

          git add .github
          git commit -m "üìù Update action references for ${RELEASE}"
          git push --set-upstream origin ${BRANCH}

          gh release create "$RELEASE" \
              --title "Release $RELEASE" \
              --target ${BRANCH} \
              --verify-tag

          gh release upload "$RELEASE" --clobber \
            './dist/genIndex.js#genIndex.js' \
            './dist/votes.js#votes.js'
